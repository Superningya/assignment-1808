
v-on 事件绑定指令 简写 @
v-bind 属性绑定指令 简写 :

v-model  =>   :value="value" @input='input'
 
v-for里  数组索引是第二个参数，对象索引是第三个参数

数组更新
    Vue.set(vm.items, indexOfItem, newValue);
    vm.$set(vm.items, indexOfItem, newValue);
    vm.items.splice(indexOfItem, 1, newValue)
对象更新
    Vue.set(vm.obj, key, newValue)；
    Object.assign({}, vm.obj, newObj);

---------------
v-for和v-if同时出现是，v-for的优先级大于v-if
如果需要v-if来处理v-for的话，需要把v-if写在外层


--vue指令修饰符--
    理解事件捕获、事件冒泡、事件委托
    .stop <=> StopPropagation  .prevent =>preventDetault .capture .self .once  .passive
    v-model  .number .lazy .trim
    v-on:keyup.13
       

--computed--
计算属性缓存vs方法
    计算属性是基于它们的响应式依赖进行缓存的只在相关响应式依赖发生改变时它们才会重新求值。相比之下，每当触发重新渲染时，调用方法将总会再次执行函数。
计算属性的setter
    两个钩子函数 get(),set()   set定义一个参数是set值

--watch--
    回调参数（newValue，oldValue）
    监听对象、数组，handle、deep参数
    监听对象属性 对象键路径必须加上引号（’obj.name’）
    通过实例方法$watch 来监听数据   vm.$watch('数据',function(){})




